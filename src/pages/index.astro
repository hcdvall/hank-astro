---
import MainLayout from '../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';

const allProjects = await getCollection('projects');
const highlightedProjects = allProjects
  .filter(p => p.data.highlight)
  .sort((a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf())
  .slice(0, 3);
---

<MainLayout showNavbar={false} showFooter={false}>
  <!-- Hero Section -->
  <section class="hero-section">
    <div class="hero-content">
      <h1 class="glitch" 
        data-text="HENRIK_SEDVALL">HENRIK_SEDVALL</h1>
      <div class="typing-animation" id="typing-text"></div>
      <div class="cta-buttons">
        <a href="home" class="btn">ENTER</a>
      </div>
      <div class="theme-toggle-container">
        <button id="theme-toggle" class="theme-toggle">!</button>
      </div>
    </div>
  </section>

  <style>
    .hero-section {
      display: flex;
      align-items: flex-start;
      justify-content: center;
      padding-top: 5rem;
      margin-bottom: -40vh;
      background: linear-gradient(135deg, var(--dracula-background) 0%, #1a1b26 100%);
    }

    .hero-content {
      text-align: center;
      max-width: 800px;
      z-index: 2;
      padding: 0 2rem;
    }

    .glitch {
      font-size: 4rem;
      font-weight: bold;
      color: var(--dracula-cyan);
      position: relative;
      margin-bottom: 20px;
      font-family: 'VT323', monospace;
      animation: glitch 2s infinite;
    }

    @keyframes glitch {
      0%, 100% { transform: translate(0); }
      20% { transform: translate(-2px, 2px); }
      40% { transform: translate(-2px, -2px); }
      60% { transform: translate(2px, 2px); }
      80% { transform: translate(2px, -2px); }
    }

    .glitch::before,
    .glitch::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    .glitch::before {
      animation: glitch-1 0.5s infinite;
      color: var(--dracula-pink);
      z-index: -1;
    }

    .glitch::after {
      animation: glitch-2 0.5s infinite;
      color: var(--dracula-purple);
      z-index: -2;
    }

    @keyframes glitch-1 {
      0%, 100% { transform: translate(0); }
      20% { transform: translate(-2px, 2px); }
      40% { transform: translate(-2px, -2px); }
      60% { transform: translate(2px, 2px); }
      80% { transform: translate(2px, -2px); }
    }

    @keyframes glitch-2 {
      0%, 100% { transform: translate(0); }
      20% { transform: translate(2px, -2px); }
      40% { transform: translate(2px, 2px); }
      60% { transform: translate(-2px, -2px); }
      80% { transform: translate(-2px, 2px); }
    }

    .typing-animation {
      font-size: 1.5rem;
      color: var(--dracula-green);
      margin-bottom: 30px;
      min-height: 2em;
      font-family: 'Fira Code', monospace;
    }

    .cursor {
      animation: blink 1s infinite;
    }

    @keyframes blink {
      0%, 50% { opacity: 1; }
      51%, 100% { opacity: 0; }
    }

    .cta-buttons {
      display: flex;
      gap: 20px;
      justify-content: center;
      flex-wrap: wrap;
      margin-top: 30px;
    }

    .btn {
      padding: 12px 24px;
      background: transparent;
      border: 2px solid var(--dracula-cyan);
      color: var(--dracula-cyan);
      text-decoration: none;
      font-family: 'Fira Code', monospace;
      font-size: 16px;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .theme-toggle-container {
      position: fixed;
      left: 50%;
      bottom: 2rem;
      transform: translateX(-50%);
      z-index: 100;
      padding-bottom: 20px;;
    }

    .theme-toggle {
      background-color: var(--button-background);
      color: var(--button-text-color);
      border: none;
      padding: 0.5rem 1rem;
      cursor: pointer;
      font-weight: bold;
      font-size: 20px;
      border-radius: 5px;
      box-shadow: 0 0 5px var(--navbar-glow-color);
    }

    .theme-toggle:hover {
      background-color: var(--button-hover);
      box-shadow: 0 0 5px var(--button-hover);
    }

    .btn:hover {
      color: var(--dracula-background);
      box-shadow: 0 0 20px var(--dracula-cyan);
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: var(--dracula-cyan);
      transition: left 0.3s ease;
      z-index: -1;
    }

    .btn:hover::before {
      left: 0;
    }

    .section {
      padding: 4rem 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .section h2 {
      font-size: 2.5rem;
      color: var(--dracula-purple);
      text-align: center;
      margin-bottom: 3rem;
      font-family: 'VT323', monospace;
    }

    @media (max-width: 768px) {
      .hero-section h1 {
        font-size: 3rem;
      }
      .hero-text {
        font-size: 1.2rem;
      }
      .section {
        padding: 3rem 1rem;
      }

    }
  </style>

<script>
  // Typing animation
  const typingText = document.getElementById('typing-text');
  const phrases = [
    'Game Developer & Machine Learning Engineer',
    'AI Brogrammer & Cloud Hustler',
    'Physics-Based Organ Donator',
    'Creative Problem Creater',
    'I recklessly force push to main on Fridays',
  ];
  
  let phraseIndex = 0;
  let charIndex = 0;
  let isDeleting = false;
  
  function typeWriter() {
    const currentPhrase = phrases[phraseIndex];
    
    if (isDeleting) {
      typingText.innerHTML = currentPhrase.substring(0, charIndex - 1) + '<span class="cursor">|</span>';
      charIndex--;
    } else {
      typingText.innerHTML = currentPhrase.substring(0, charIndex + 1) + '<span class="cursor">|</span>';
      charIndex++;
    }
    
    if (!isDeleting && charIndex === currentPhrase.length) {
      setTimeout(() => isDeleting = true, 2000);
    } else if (isDeleting && charIndex === 0) {
      isDeleting = false;
      phraseIndex = (phraseIndex + 1) % phrases.length;
    }
    
    const speed = isDeleting ? 50 : 100;
    setTimeout(typeWriter, speed);
  }
  
  typeWriter();
</script>

</MainLayout>