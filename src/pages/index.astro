---
import MainLayout from '../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';

const allProjects = await getCollection('projects');
const highlightedProjects = allProjects
  .filter(p => p.data.highlight)
  .sort((a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf())
  .slice(0, 3);
---

<MainLayout>
  <!-- Hero Section -->
  <section class="hero-section">
    <div class="hero-content">
      <h1 class="glitch" 
        data-text="HENRIK_SEDVALL">HENRIK_SEDVALL</h1>
      <div class="typing-animation" id="typing-text"></div>
      <div class="cta-buttons">
        <a href="#projects" class="btn">View Projects</a>
        <a href="#contact" class="btn">Get In Touch</a>
      </div>
    </div>
  </section>

  <!-- Highlighted Projects -->
  <section class="section fade-on-scroll">
    <h2>Featured Projects</h2>
    <div class="project-grid">
      {highlightedProjects.length === 0 && <p>No highlighted projects yet.</p>}
      {highlightedProjects.map(project => (
        <a href={`/projects/${project.slug}/`} class="project-card">
          {project.data.heroImg && (
            <img src={project.data.heroImg} alt={project.data.title} class="project-img" />
          )}
          <div class="project-info">
            <h3>{project.data.title}</h3>
            <p>{project.data.description}</p>
          </div>
        </a>
      ))}
    </div>
  </section>

  <!-- Skills -->
  <section class="section skills-section fade-on-scroll">
    <h2>Technical Skills</h2>
    <div class="skills-grid">
      <div class="skill-category">
        <h3>Game Engines</h3>
        <ul>
          <li>Unity 3D/2D</li>
          <li>Unreal Engine</li>
          <li>Godot</li>
        </ul>
      </div>
      <div class="skill-category">
        <h3>Programming</h3>
        <ul>
          <li>C# / C++</li>
          <li>JavaScript / TypeScript</li>
          <li>Python</li>
        </ul>
      </div>
      <div class="skill-category">
        <h3>Specialties</h3>
        <ul>
          <li>Gameplay Systems</li>
          <li>Physics & AI</li>
          <li>Performance Optimization</li>
        </ul>
      </div>
    </div>
  </section>

  <!-- Experience Timeline -->
  <section class="section experience-section fade-on-scroll">
    <h2>Experience Timeline</h2>
    <div class="experience-timeline">
      <div class="experience-item">
        <div class="experience-marker"></div>
        <div class="experience-date">2023 - Present</div>
        <h3 class="experience-title">Senior Game Developer</h3>
        <div class="experience-company">Pixel Dynamics Studio</div>
        <p class="experience-description">
          Leading development of next-generation VR experiences and optimizing game performance across multiple platforms. 
          Mentoring junior developers and establishing best practices.
        </p>
      </div>

      <div class="experience-item">
        <div class="experience-marker"></div>
        <div class="experience-date">2021 - 2023</div>
        <h3 class="experience-title">Game Programmer</h3>
        <div class="experience-company">Indie Game Collective</div>
        <p class="experience-description">
          Developed gameplay systems and implemented AI behaviors for multiple indie titles. 
          Specialized in performance optimization and cross-platform deployment.
        </p>
      </div>

      <div class="experience-item">
        <div class="experience-marker"></div>
        <div class="experience-date">2019 - 2021</div>
        <h3 class="experience-title">Junior Developer</h3>
        <div class="experience-company">Tech Startup Games</div>
        <p class="experience-description">
          Started career working on mobile games and learning industry best practices. 
          Gained experience with agile development and collaborative workflows.
        </p>
      </div>
    </div>
  </section>

  <style>
    .hero-section {
      min-height: 100vh;
      display: flex;
      align-items: flex-start;
      justify-content: center;
      padding-top: 15rem;
      margin-bottom: -40vh;
      background: linear-gradient(135deg, var(--dracula-background) 0%, #1a1b26 100%);
    }

    .hero-content {
      text-align: center;
      max-width: 800px;
      z-index: 2;
      padding: 0 2rem;
    }

    .glitch {
      font-size: 4rem;
      font-weight: bold;
      color: var(--dracula-cyan);
      position: relative;
      margin-bottom: 20px;
      font-family: 'VT323', monospace;
      animation: glitch 2s infinite;
    }

    @keyframes glitch {
      0%, 100% { transform: translate(0); }
      20% { transform: translate(-2px, 2px); }
      40% { transform: translate(-2px, -2px); }
      60% { transform: translate(2px, 2px); }
      80% { transform: translate(2px, -2px); }
    }

    .glitch::before,
    .glitch::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    .glitch::before {
      animation: glitch-1 0.5s infinite;
      color: var(--dracula-pink);
      z-index: -1;
    }

    .glitch::after {
      animation: glitch-2 0.5s infinite;
      color: var(--dracula-purple);
      z-index: -2;
    }

    @keyframes glitch-1 {
      0%, 100% { transform: translate(0); }
      20% { transform: translate(-2px, 2px); }
      40% { transform: translate(-2px, -2px); }
      60% { transform: translate(2px, 2px); }
      80% { transform: translate(2px, -2px); }
    }

    @keyframes glitch-2 {
      0%, 100% { transform: translate(0); }
      20% { transform: translate(2px, -2px); }
      40% { transform: translate(2px, 2px); }
      60% { transform: translate(-2px, -2px); }
      80% { transform: translate(-2px, 2px); }
    }

    .typing-animation {
      font-size: 1.5rem;
      color: var(--dracula-green);
      margin-bottom: 30px;
      min-height: 2em;
      font-family: 'Fira Code', monospace;
    }

    .cursor {
      animation: blink 1s infinite;
    }

    @keyframes blink {
      0%, 50% { opacity: 1; }
      51%, 100% { opacity: 0; }
    }

    .cta-buttons {
      display: flex;
      gap: 20px;
      justify-content: center;
      flex-wrap: wrap;
      margin-top: 30px;
    }

    .btn {
      padding: 12px 24px;
      background: transparent;
      border: 2px solid var(--dracula-cyan);
      color: var(--dracula-cyan);
      text-decoration: none;
      font-family: 'Fira Code', monospace;
      font-size: 16px;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .btn:hover {
      color: var(--dracula-background);
      box-shadow: 0 0 20px var(--dracula-cyan);
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: var(--dracula-cyan);
      transition: left 0.3s ease;
      z-index: -1;
    }

    .btn:hover::before {
      left: 0;
    }

    .section {
      padding: 4rem 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .section h2 {
      font-size: 2.5rem;
      color: var(--dracula-purple);
      text-align: center;
      margin-bottom: 3rem;
      font-family: 'VT323', monospace;
    }

    .project-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      padding: 0 1rem;
    }

    .project-card {
      background: var(--dracula-background-lighter);
      border-radius: 1rem;
      overflow: hidden;
      text-decoration: none;
      color: inherit;
      transition: transform 0.2s, box-shadow 0.2s;
    }

    .project-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 8px 24px rgba(0,0,0,0.2);
    }

    .project-img {
      width: 100%;
      height: 200px;
      object-fit: cover;
    }

    .project-info {
      padding: 1.5rem;
    }

    .project-info h3 {
      color: var(--dracula-cyan);
      margin-bottom: 0.5rem;
      font-size: 1.5rem;
    }

    .project-info p {
      color: var(--dracula-foreground);
      line-height: 1.6;
    }

    .skills-section {
      background: var(--dracula-background-lighter);
    }

    .skills-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
    }

    .skill-category {
      padding: 1.5rem;
      border-radius: 0.5rem;
    }

    .skill-category h3 {
      color: var(--dracula-orange);
      margin-bottom: 1rem;
      font-size: 1.3rem;
    }

    .skill-category ul {
      list-style: none;
      padding: 0;
    }

    .skill-category li {
      color: var(--dracula-green);
      margin-bottom: 0.5rem;
      font-size: 1.1rem;
    }

    .experience-section {
      position: relative;
      padding: 4rem 2rem;
    }

    .experience-timeline {
      position: relative;
      max-width: 800px;
      margin: 3rem auto 0;
      padding-left: 2rem;
    }

    .experience-timeline::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 2px;
      background: var(--dracula-comment);
    }

    .experience-item {
      position: relative;
      margin-bottom: 3rem;
      padding-left: 2rem;
      transition: transform 0.3s ease;
    }

    .experience-item:hover {
      transform: translateX(10px);
    }

    .experience-marker {
      position: absolute;
      left: -2.6rem;
      top: 0;
      width: 1rem;
      height: 1rem;
      background: var(--dracula-purple);
      border-radius: 50%;
      border: 3px solid var(--dracula-background);
      transition: transform 0.3s ease;
    }

    .experience-item:hover .experience-marker {
      transform: scale(1.2);
      background: var(--dracula-pink);
    }

    .experience-date {
      color: var(--dracula-comment);
      font-size: 0.9rem;
      margin-bottom: 0.5rem;
      font-family: 'VT323', monospace;
    }

    .experience-title {
      color: var(--dracula-cyan);
      font-size: 1.3rem;
      margin-bottom: 0.5rem;
    }

    .experience-company {
      color: var(--dracula-orange);
      margin-bottom: 0.8rem;
      font-size: 1.1rem;
    }

    .experience-description {
      color: var(--dracula-foreground);
      line-height: 1.6;
    }

    .fade-on-scroll {
      opacity: 0.1;
      transform: translateY(40px);
      transition: opacity 0.7s, transform 0.7s;
    }

    .fade-on-scroll.visible {
      opacity: 1;
      transform: translateY(0);
    }

    @media (max-width: 768px) {
      .hero-section h1 {
        font-size: 3rem;
      }
      .hero-text {
        font-size: 1.2rem;
      }
      .section {
        padding: 3rem 1rem;
      }

      .experience-timeline {
        margin-top: 2rem;
        padding-left: 1rem;
      }

      .experience-item {
        padding-left: 1.5rem;
      }

      .experience-marker {
        left: -2.1rem;
      }
    }
  </style>

<script>
  // Typing animation
  const typingText = document.getElementById('typing-text');
  const phrases = [
    'Game Developer & Programmer',
    'Physics-Based Gameplay Expert',
    'Creative Problem Solver',
    'Building Interactive Experiences'
  ];
  
  let phraseIndex = 0;
  let charIndex = 0;
  let isDeleting = false;
  
  function typeWriter() {
    const currentPhrase = phrases[phraseIndex];
    
    if (isDeleting) {
      typingText.innerHTML = currentPhrase.substring(0, charIndex - 1) + '<span class="cursor">|</span>';
      charIndex--;
    } else {
      typingText.innerHTML = currentPhrase.substring(0, charIndex + 1) + '<span class="cursor">|</span>';
      charIndex++;
    }
    
    if (!isDeleting && charIndex === currentPhrase.length) {
      setTimeout(() => isDeleting = true, 2000);
    } else if (isDeleting && charIndex === 0) {
      isDeleting = false;
      phraseIndex = (phraseIndex + 1) % phrases.length;
    }
    
    const speed = isDeleting ? 50 : 100;
    setTimeout(typeWriter, speed);
  }
  
  typeWriter();
</script>

<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      } else {
        entry.target.classList.remove('visible');
      }
    });
  }, { threshold: 0.4 }); // 20% of the section must be visible

  document.querySelectorAll('.fade-on-scroll').forEach(section => {
    observer.observe(section);
  });
</script>

</MainLayout>